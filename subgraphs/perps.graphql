type FuturesMarket @entity {
  id: ID!
  asset: Bytes!
  marketKey: Bytes!
  marketStats: FuturesCumulativeStat!
}

type FuturesTrade @entity {
  id: ID!
  timestamp: BigInt!
  account: Bytes!
  abstractAccount: Bytes!
  accountType: FuturesAccountType!
  margin: BigInt!
  size: BigInt!
  asset: Bytes!
  marketKey: Bytes!
  price: BigInt!
  positionId: ID!
  positionSize: BigInt!
  positionClosed: Boolean!
  pnl: BigInt!
  feesPaid: BigInt!
  fundingAccrued: BigInt!
  keeperFeesPaid: BigInt!
  orderType: FuturesOrderType!
  trackingCode: Bytes!
}

type FuturesPosition @entity {
  id: ID!
  lastTxHash: Bytes!
  openTimestamp: BigInt!
  closeTimestamp: BigInt
  timestamp: BigInt!
  market: Bytes!
  asset: Bytes!
  marketKey: Bytes!
  account: Bytes!
  abstractAccount: Bytes!
  accountType: FuturesAccountType!
  isOpen: Boolean!
  isLiquidated: Boolean!
  trades: BigInt!
  totalVolume: BigInt!
  size: BigInt!
  initialMargin: BigInt!
  margin: BigInt!
  pnl: BigInt!
  feesPaid: BigInt!
  netFunding: BigInt!
  pnlWithFeesPaid: BigInt!
  netTransfers: BigInt!
  totalDeposits: BigInt!
  fundingIndex: BigInt!
  entryPrice: BigInt!
  avgEntryPrice: BigInt!
  lastPrice: BigInt!
  exitPrice: BigInt
}

type FuturesStat @entity {
  id: ID!
  account: Bytes!
  feesPaid: BigInt!
  pnl: BigInt!
  pnlWithFeesPaid: BigInt!
  liquidations: BigInt!
  totalTrades: BigInt!
  totalVolume: BigInt!
  smartMarginVolume: BigInt!
}

type FuturesCumulativeStat @entity {
  id: ID!
  totalLiquidations: BigInt!
  totalTrades: BigInt!
  totalTraders: BigInt!
  totalVolume: BigInt!
  averageTradeSize: BigInt!
}

type FuturesAggregateStat @entity {
  id: ID!
  period: BigInt!
  timestamp: BigInt!
  marketKey: Bytes!
  asset: Bytes!
  trades: BigInt!
  volume: BigInt!
  feesKwenta: BigInt!
  feesSynthetix: BigInt!
  feesCrossMarginAccounts: BigInt!
}

type FuturesMarginTransfer @entity {
  id: ID!
  timestamp: BigInt!
  account: Bytes!
  market: Bytes!
  asset: Bytes!
  marketKey: Bytes!
  size: BigInt!
  txHash: String!
}

type FuturesMarginAccount @entity {
  id: ID!
  timestamp: BigInt!
  account: Bytes!
  market: Bytes!
  asset: Bytes!
  margin: BigInt!
  deposits: BigInt!
  withdrawals: BigInt!
}

type FundingPayment @entity {
  id: ID!
  timestamp: BigInt!
  account: Bytes!
  positionId: ID!
  marketKey: Bytes!
  asset: Bytes!
  amount: BigInt!
}

type FundingRateUpdate @entity {
  id: ID!
  timestamp: BigInt!
  market: Bytes!
  marketKey: Bytes!
  asset: Bytes!
  sequenceLength: BigInt!
  funding: BigInt!
  fundingRate: BigInt!
}

type FundingRatePeriod @entity {
  id: ID!
  timestamp: BigInt!
  fundingRate: BigInt!
  marketKey: Bytes!
  asset: Bytes!
  period: FundingRatePeriodType!
}

enum FuturesOrderType {
  NextPrice
  Limit
  StopMarket
  Market
  Liquidation
  Delayed
  DelayedOffchain
}

enum FundingRatePeriodType {
  Hourly
  Daily
}

enum FuturesOrderStatus {
  Pending
  Open
  Filled
  Cancelled
}

enum FuturesAccountType {
  isolated_margin
  smart_margin
}

type FuturesOrder @entity {
  id: ID!
  size: BigInt!
  marketKey: Bytes!
  account: Bytes!
  txnHash: Bytes!
  abstractAccount: Bytes!
  orderId: BigInt!
  targetPrice: BigInt!
  marginDelta: BigInt!
  timestamp: BigInt!
  orderType: FuturesOrderType!
  status: FuturesOrderStatus!
  keeper: Bytes!
}

type SmartMarginAccount @entity {
  id: ID!
  owner: Bytes!
  version: Bytes!
}

type SmartMarginAccountTransfer @entity {
  id: ID!
  account: Bytes!
  abstractAccount: Bytes!
  timestamp: BigInt!
  size: BigInt!
  txHash: String!
}

type SmartMarginOrder @entity {
  id: ID!
  account: Bytes!
  orderType: FuturesOrderType!
  marketKey: Bytes!
  recordTrade: Boolean!
  feesPaid: BigInt!
}

# Deprecated
type CrossMarginAccountTransfer @entity {
  id: ID!
  account: Bytes!
  abstractAccount: Bytes!
  timestamp: BigInt!
  size: BigInt!
  txHash: String!
}

type CrossMarginAccount @entity {
  id: ID!
  owner: Bytes!
}
